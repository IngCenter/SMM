<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABxCAYAAAAj+QZ8AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAAFyNJREFUeF7tnQmYVNWVxzuJC2s39ALdNDu2IowggSiCC4IRBVERcEVcGVHBZtVx
        i3FhURSjSWtQNFE0omaMjruCC8jqigoo4kxsEDQRRCDKCHrm/W/df3H69nuvXjddr4r5PN93vnvPeb97
        7r3ndFW9elX1Okd+kqySPbYg7y9/X5579ll57NFH5b5775WKO38vf7r/T/Kfjz8uc19+WVauWGnJPUv2
        mIJ88803cs/MmTL4xJOktFlzyc/Nk6aNc01b2KSpNM8vkMK8JpLv+eAv8PxtSlvJkMGD5f5Zs2Tz5s02
        UnZL1hdk5YoVcvyx/aWoSb5JcqviEmnfuo10aNPWtNCydu2r2Pu1bWe0bctWyeIVFxTKsf2OkTVr1tjI
        2SlZW5BNmzbJgP79Ja9BQ5PUdq1aJxPNxKMIfsWAz2XQL21eLI3rN5CTBg6Sbdu22ZmyS7KyINNvvlly
        vUK0sIVgoqFMvk40NUrB0Edhcr3C3PvHmXbG7JGsKsimjRulZ/dfmdcEFKKDTaJONBLql2iXQRvGQPHo
        O+6YX8vOnTvtCjIvWVOQzz77TIoLi6SlfY0ISmJYMehLxVBhFxcUGXbz5m/sSjIrWVGQd99917zw4kWY
        SWTCoLShqRINX00ZPIXhD6GystKuKHOS8YJ8tGqV90JbP5k8KBLFJGpfUKJTMfC5jDuuTWlLadooVzZs
        2GBXlhnJaEG+/fZbkwg8MpgcKBONRFGDihGVoc9lOA79ViUtTPvjjz/aFcYvGS1Ir0N7mqcLJgfKJNIO
        S7Rm3MTrRFODYmumtKhY+vY52q4wfslYQcaVl0tR0/xqiYatNagY2peK8YuDvssYu21badKosUyZPNmu
        NF7JSEHe817E8T6AyYH6JSwo0akY+GhDg2JrRsfGKXdew0ay+uNP7Irjk4wUpGePXyVPb5EcJoNJY8J0
        EneHgU8zehxajiMDX+sWpdLniCPsiuOT2Avy3DPPemdVDaskiMlAIphEHg9j0AYxaF0GfZfR4+jn/Lha
        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
        TxxE6KgAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>